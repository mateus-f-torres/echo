name: Draft Action

on:
  workflow_dispatch:
        
jobs:
  copy_deploy:
    name: Copy Deploy to Release
    runs-on: ubuntu-latest
    outputs:
      release-branch: ${{ steps.release-branch.outputs.name }}
    steps:
      - name: Get Deploy SHA1
        id: master-sha
        run: |
          curl --fail --request GET 'https://api.github.com/repos/mateus-f-torres/echo/git/ref/heads/master' \
            --header 'Accept: application/vnd.github.v3+json' \
            --header 'Authorization: ${{ secrets.AUTOMATION_TOKEN }}' \
            --header 'Content-Type: application/json' | jq '.object.sha' > sha.txt
          echo "::set-output name=sha::$(cat sha.txt)"

      - name: Create Weekly Release Branch
        id: release-branch
        run: |
          branch=$(echo "release/$(date +%y-%m-%d)")
          
          data=$(cat <<EOF
          {
            "ref": "refs/heads/$branch",
            "sha": ${{ steps.master-sha.outputs.sha }}
          }
          EOF
          )

          curl --fail --request POST 'https://api.github.com/repos/mateus-f-torres/echo/git/refs' \
            --header 'Accept: application/vnd.github.v3+json' \
            --header 'Authorization: ${{ secrets.AUTOMATION_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data "$data"
          echo "::set-output name=name::$branch"

  release_pr:
    needs: copy_deploy
    name: Release Pull Request
    runs-on: ubuntu-latest
    if: ${{ needs.copy_deploy.outputs.release-branch != null }}
    steps:
      - name: Checkout Release
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.copy_deploy.outputs.release-branch }}
          
      - name: Enable QA envs
        run: |
          echo ${{ needs.copy_deploy.outputs.release-branch }}
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "generated"
          git push
          
      - name: Open Pull Request
        run: |
          data=$(cat <<EOF
          {
            "title": "Example Pull Request",
            "head": ${{ needs.copy_deploy.outputs.release-branch }},
            "base": "master",
            "body": "This pull request was created via Github API"
          }
          EOF
          )
          
          curl --fail --request POST 'https://api.github.com/repos/mateus-f-torres/echo/pulls' \
            --header 'Accept: application/vnd.github.v3+json' \
            --header 'Authorization: ${{ secrets.AUTOMATION_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data "$data"
        

      
